// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Create Job Test Renders the create job screen 1`] = `
CreateJobScreen {
  "attemptCreateJob": [Function],
  "context": Object {},
  "props": Object {
    "dispatch": [Function],
    "store": Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    },
    "storeSubscription": Subscription {
      "listeners": Object {
        "clear": [Function],
        "get": [Function],
        "notify": [Function],
        "subscribe": [Function],
      },
      "onStateChange": [Function],
      "parentSub": undefined,
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "unsubscribe": [Function],
    },
    "user": Object {
      "data": Object {
        "ID": "12345",
      },
    },
  },
  "refs": Object {},
  "setState": [Function],
  "state": Object {
    "address": "",
    "description": "",
    "jobType": "",
    "jobTypes": Array [],
    "wage": "",
  },
  "updater": Updater {
    "_callbacks": Array [],
    "_renderer": ReactShallowRenderer {
      "_context": Object {},
      "_element": <CreateJobScreen
        dispatch={[Function]}
        store={
          Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          }
        }
        storeSubscription={
          Subscription {
            "listeners": Object {
              "clear": [Function],
              "get": [Function],
              "notify": [Function],
              "subscribe": [Function],
            },
            "onStateChange": [Function],
            "parentSub": undefined,
            "store": Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            "unsubscribe": [Function],
          }
        }
        user={
          Object {
            "data": Object {
              "ID": "12345",
            },
          }
        }
      />,
      "_forcedUpdate": false,
      "_instance": [Circular],
      "_newState": null,
      "_rendered": <Component
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#E1E2E1",
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
          }
        }
      >
        <TouchableWithoutFeedback
          accessbile={false}
          onPress={[Function]}
        >
          <Component
            style={
              Object {
                "flex": 1,
                "flexDirection": "column",
                "justifyContent": "space-around",
                "padding": 20,
                "width": "100%",
              }
            }
          >
            <Component>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "fontSize": 18,
                    "textAlign": "center",
                  }
                }
              >
                Address:
              </Text>
              <TextInput
                allowFontScaling={true}
                onChangeText={[Function]}
                placeholder="Ex: 1234 Address Rd"
                returnKeyType="done"
                style={
                  Object {
                    "backgroundColor": "#F5F5F6",
                    "borderRadius": 10,
                    "marginVertical": 5,
                    "padding": 20,
                  }
                }
                testID="#address"
                underlineColorAndroid="transparent"
              />
            </Component>
            <Component>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "fontSize": 18,
                    "textAlign": "center",
                  }
                }
              >
                Job description:
              </Text>
              <TextInput
                allowFontScaling={true}
                blurOnSubmit={true}
                multiline={true}
                numberOfLines={4}
                onChangeText={[Function]}
                placeholder="Enter Description Here"
                returnKeyType="done"
                style={
                  Object {
                    "backgroundColor": "#F5F5F6",
                    "borderRadius": 10,
                    "height": 100,
                    "marginVertical": 5,
                    "overflow": "hidden",
                    "padding": 10,
                    "width": "100%",
                  }
                }
                testID="#description"
                underlineColorAndroid="transparent"
              />
            </Component>
            <Component>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "fontSize": 18,
                    "textAlign": "center",
                  }
                }
              >
                Wage in CAD:
              </Text>
              <TextInput
                allowFontScaling={true}
                keyboardType="numeric"
                onChangeText={[Function]}
                placeholder="Enter Wage here"
                returnKeyType="done"
                style={
                  Object {
                    "backgroundColor": "#F5F5F6",
                    "borderRadius": 10,
                    "marginVertical": 5,
                    "padding": 20,
                  }
                }
                testID="#wage"
                underlineColorAndroid="transparent"
              />
            </Component>
            <Component>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "fontSize": 18,
                    "textAlign": "center",
                  }
                }
              >
                Job type:
              </Text>
              <Component
                style={
                  Object {
                    "backgroundColor": "#F5F5F6",
                    "borderRadius": 10,
                    "marginVertical": 5,
                    "padding": 5,
                  }
                }
              >
                <RNPickerSelect
                  disabled={false}
                  doneText="Done"
                  hideDoneBar={false}
                  hideIcon={false}
                  itemKey={null}
                  items={Array []}
                  modalProps={Object {}}
                  onDonePress={null}
                  onDownArrow={null}
                  onUpArrow={null}
                  onValueChange={[Function]}
                  pickerProps={Object {}}
                  placeholder={
                    Object {
                      "label": "Select Job Here",
                      "value": "",
                    }
                  }
                  placeholderTextColor="#C7C7CD"
                  style={
                    Object {
                      "inputIOS": Object {
                        "color": "#000000",
                        "height": 50,
                        "paddingLeft": 10,
                      },
                    }
                  }
                  testID="#type"
                  textInputProps={Object {}}
                />
              </Component>
            </Component>
            <TouchableOpacity
              activeOpacity={0.2}
              onPress={[Function]}
              style={
                Object {
                  "paddingVertical": 10,
                }
              }
              testID="#submit"
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "backgroundColor": "#00796b",
                    "borderRadius": 10,
                    "color": "#ffffff",
                    "elevation": 1,
                    "fontSize": 18,
                    "fontWeight": "600",
                    "overflow": "hidden",
                    "padding": 10,
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 0.8,
                    "shadowRadius": 2,
                    "textAlign": "center",
                  }
                }
              >
                Submit
              </Text>
            </TouchableOpacity>
            <TouchableOpacity
              activeOpacity={0.2}
              onPress={[Function]}
              style={
                Object {
                  "paddingVertical": 10,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "backgroundColor": "#ffff",
                    "borderColor": "#00796b",
                    "borderRadius": 10,
                    "borderWidth": 1,
                    "color": "#00796b",
                    "elevation": 1,
                    "fontSize": 18,
                    "fontWeight": "600",
                    "overflow": "hidden",
                    "padding": 10,
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 0.8,
                    "shadowRadius": 2,
                    "textAlign": "center",
                  }
                }
              >
                Cancel
              </Text>
            </TouchableOpacity>
          </Component>
        </TouchableWithoutFeedback>
      </Component>,
      "_rendering": false,
      "_updater": [Circular],
    },
  },
  Symbol(enzyme.__setState__): [Function],
}
`;
